# StorageManager
Use StorageManager to simplify your interaction with the localStorage API. StorageManager has no external dependencies in better browsers.

## Class Factory

    Person = StorageManager.model 'Person', {'name':''}
    
    employee = new Person()
    employee.name = "Jon Smith"
    employee.save()
    
### Model keying
StorageManager will prepend the name of your model onto keys for localStorage use. If you're working
with data from a server (non UUID-keyed models) this will prevent collisions in the non-tabular
localStorage DB. 
    
    employee.id = 4
    employee.save()
    id = employee.id # Employee#4
    
    p = Person.get(id)
    p.name # Jon Smith
    
### Event Listeners

    Person.add_listener 'save', (instance)->
      console.log instance.name + " was saved."

    employee.save() # instance
    # -> Joh Smith was saved
      

## JSON Store
### Auto-keying with UUID's

    person = StorageManager.set {'name':'Jon Smith', 'phone':'301-555-6226'}
    person.id # 97705CBB851E42588FEAD9453D60699B # Auto-set UUID

### Manual keying

    bookmark = StorageManager.set {'id':'GitHub', 'url':'https://github.com/repositories/random'}
    bookmark.id # GitHub

## KV-store

    preference = StorageManager.set 'play_sound', 'true'
    preference # true

    preference = StorageManager.get 'play_sound'
    preference # true

## Extended Objects
  
    person.update {'phone': '412-268-2000'}
    person.destroy

## Collections
    
    everything = StorageManager.all() # [object, object, object ...]

    named_things = everything.filter ((obj) ->
      obj.name?
    )
    

